package com.neuedu.dao;

import com.neuedu.pojo.Cart;
import com.neuedu.pojo.OrderItem;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface CartMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cart
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cart
     *
     * @mbggenerated
     */
    int insert(Cart record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cart
     *
     * @mbggenerated
     */
    Cart selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cart
     *
     * @mbggenerated
     */
    List<Cart> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_cart
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(Cart record);

    /**
     * 通过用户id和商品id查询
     */
    Cart selectCartByUseridAndProductId(@Param("userId") Integer userId,
                                        @Param("productId") Integer productId);

    /**
     * 通过用户id查询
     */
    List<Cart> selectCartByUserid(Integer userId);

    /**
     * 查看购物车是否全选
     * @return 返回未选中的商品数量
     */
    int isCheckedAll(Integer userId);

    /**
     * 删除购物车的某些商品
     */
    int deleteByUseridAndProductIds(@Param("userId") Integer userId,
                                    @Param("productIdList") List<Integer> productIdList);

    /**
     * 操作购物车中商品是否选中
     */
    int selectOrUnselectProduct(@Param("userId") Integer userId,
                                @Param("productId") Integer productId,
                                @Param("check") Integer check);

    /**
     * 查询购物车中商品的数量
     */
    int get_cart_product_count(Integer userId);

    /**
     * 查询购物车中用户已选中的商品
     */
    List<Cart> findCartListByUserIdAndChecked(Integer userId);

    /**
     * 批量删除购物车的商品
     */
    int batchDelete(List<Cart> cartList);
}